@using Blazored.Toast
@using AlgorithmEasy.StudentSide.Shared.Enums
@using AlgorithmEasy.StudentSide.Shared.Components
@using AlgorithmEasy.StudentSide.Services
@inherits LayoutComponentBase
@inject AuthenticationService _authentication
@inject CourseManageService _courseManager
@inject IJSRuntime _jsRuntime
@inject ProjectManageService _projectManager

<CascadingValue Value="@this">
    <div class="page">
        <top-row>
            <top-row-container class="h-100 px-4 d-flex justify-content-between align-items-center">
                <left class="d-flex align-items-center">
                    @switch (Page)
                    {
                        case Page.Project:
                            <i class="fas fa-book-reader fa-lg"
                               @onclick="@SaveProject"></i>
                            break;
                        case Page.Course:
                            <i class="fas fa-laptop-code fa-lg"
                               @onclick="@ShiftToProject"></i>
                            break;
                    }
                </left>
                <right class="d-flex align-items-center">
                    <div id="clock" class="mx-2 fa-lg"></div>
                    @if (Page != Page.Index)
                    {
                        <i class="fas fa-power-off mx-2 fa-lg"
                           @onclick="_authentication.Logout"></i>
                    }
                </right>
            </top-row-container>
        </top-row>

        <main>
            @Body
        </main>
    </div>
</CascadingValue>

<BlazoredToasts/>

@switch (Type)
{
    case DialogType.SaveProject:
        <SaveProjectDialog
            SubmitSucceededCallback="@ShiftToCourse"
            CloseDialogCallback="@CloseDialog"></SaveProjectDialog>
        break;
}

@code
{
    DialogType Type { get; set; } = DialogType.None;

    async void ShiftToCourse()
    {
        await _jsRuntime.InvokeVoidAsync("Blockly.importWorkspace",
            _courseManager.CurrentCourse?.CourseDetail?.Workspace ?? "");
        _navigation.NavigateTo("/course");
    }

    async void ShiftToProject()
    {
        await _jsRuntime.InvokeVoidAsync("Blockly.importWorkspace",
            _projectManager.CurrentProject?.Workspace ?? "");
        _navigation.NavigateTo("/project");
    }

    void SaveProject()
    {
        if (_projectManager.CurrentProject == null)
        {
            ShiftToCourse();
            return;
        }
        Type = DialogType.SaveProject;
        StateHasChanged();
    }

    void CloseDialog()
    {
        Type = DialogType.None;
        StateHasChanged();
    }

    Page _page;
    public Page Page
    {
        get => _page;
        set
        {
            _page = value;
            StateHasChanged();
        }
    }

    enum DialogType
    {
        None,
        SaveProject,
    }
}
