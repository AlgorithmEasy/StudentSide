@inject IJSRuntime _jsRuntime

<workspace class="w-100 h-100">
    <div id="blockly" class="w-100 h-100" hidden="@(Type != DisplayMode.Blockly)"></div>
    <pre class="w-100 h-100 overflow-auto" hidden="@(Type != DisplayMode.Python)"><code id="python-code"></code></pre>
</workspace>
<blockly id="blocklyDiv" class="position-fixed" hidden="@(Type != DisplayMode.Blockly)"></blockly>


@code
{
    public DisplayMode Type { get; private set; } = DisplayMode.Blockly;

    public void DisplayBlockly()
    {
        Type = DisplayMode.Blockly;
        StateHasChanged();
    }

    public void DisplayPython()
    {
        Type = DisplayMode.Python;
        StateHasChanged();
    }

    public enum DisplayMode
    {
        Blockly,
        Python
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsRuntime.InvokeVoidAsync("Blockly.start", "blocklyDiv");
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
